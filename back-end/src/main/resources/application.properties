# Postgres
#spring.datasource.url = jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url= jdbc:postgresql://localhost:5432/ad_extreme
#spring.datasource.username=postgres
#spring.datasource.password=admin

#spring.jpa.hibernate.ddl-auto=create


#spring.datasource.driverClassName = org.postgresql.Driver
#spring.datasource.username = sa
#spring.datasource.password =
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect

# THYMELEAF
#spring.thymeleaf.cache = false

# DEVTOOLS
#spring.devtools.restart.trigger-file = .reloadtrigger

# PROPERTY
# -- desabilita o favicon default do spring boot --
#spring.mvc.favicon.enabled=false

# H2
#spring.datasource.url = jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName = org.h2.Driver
#spring.datasource.username = sa
#spring.datasource.password =
#spring.jpa.database-platform = org.hibernate.dialect.H2Dialect
#
## THYMELEAF
#spring.thymeleaf.cache = false

# DEVTOOLS
#spring.devtools.restart.trigger-file = .reloadtrigger

# PROPERTY
# -- desabilita o favicon default do spring boot --
#spring.mvc.favicon.enabled=false

#spring.datasource.driverClassName = org.postgresql.Driver
#spring.datasource.username = sa
#spring.datasource.password =
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect

# THYMELEAF
#spring.thymeleaf.cache = false

spring.datasource.url = jdbc:mysql://localhost:3306/ad?useSSL=false
spring.datasource.username = root
spring.datasource.password = todoPasswd

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Jwt Configuration

# The secret
jwt.token.secret=ad-extreme-security-word

# The header we are going to use for authentication
jwt.auth.header=x-auth-token

# After how many hours the token will expire
jwt.expire.hours=24